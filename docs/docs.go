// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/code_snippet/": {
            "get": {
                "description": "Get all code snippets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Snippets"
                ],
                "summary": "Get all code snippets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CodeSnippet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a code snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Snippets"
                ],
                "summary": "Create a code snippet",
                "parameters": [
                    {
                        "description": "Code Snippet information to create",
                        "name": "code_snippet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CodeSnippetForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CodeSnippet"
                        }
                    }
                }
            }
        },
        "/api/v1/code_snippet/{id}": {
            "get": {
                "description": "Get a single code snippet by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Snippets"
                ],
                "summary": "Get a single code snippet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Code Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CodeSnippet"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a code snippet by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Snippets"
                ],
                "summary": "Delete a code snippet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Code Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CodeSnippet"
                        }
                    }
                }
            }
        },
        "/api/v1/code_snippet_version/": {
            "post": {
                "description": "Create a code snippet version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Snippets Versions"
                ],
                "summary": "Create a code snippet version",
                "parameters": [
                    {
                        "description": "Code Snippet information to create",
                        "name": "code_snippet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CodeSnippetVersion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CodeSnippetVersion"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "login a user by username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "invalid credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notifications/{id}": {
            "get": {
                "description": "Retrieve all notifications for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Notification"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/program_language/": {
            "get": {
                "description": "Get all program languages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program Languages"
                ],
                "summary": "Get all program languages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ProgramLanguage"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a program language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program Languages"
                ],
                "summary": "Create a program language",
                "parameters": [
                    {
                        "description": "Name of the program language",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ProgramLanguageForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ProgramLanguage"
                        }
                    }
                }
            }
        },
        "/api/v1/register/": {
            "post": {
                "description": "create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/api/v1/review_comment/": {
            "post": {
                "description": "Adds a new review comment to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review Comments"
                ],
                "summary": "Create a review comment",
                "parameters": [
                    {
                        "description": "Review comment information to create",
                        "name": "review_comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReviewComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ReviewComment"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "description": "get details of user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get single user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            },
            "put": {
                "description": "update user's information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    }
                }
            }
        },
        "/api/v1/user_code_snippets/{user_id}": {
            "get": {
                "description": "Retrieve all code snippets created by a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Code Snippets"
                ],
                "summary": "Get user's code snippets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CodeSnippet"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CodeSnippetForm": {
            "type": "object",
            "properties": {
                "is_archived": {
                    "type": "boolean"
                },
                "is_draft": {
                    "type": "boolean"
                },
                "is_private": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handler.ProgramLanguageForm": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.User": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "model.CodeSnippet": {
            "description": "CodeSnippet is the model representing a code snippet in the system.",
            "type": "object",
            "properties": {
                "codeSnippetID": {
                    "type": "string"
                },
                "codeSnippetVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CodeSnippetVersion"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "isDraft": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.CodeSnippetRating": {
            "description": "CodeSnippetRating is the model representing a rating for a code snippet.",
            "type": "object",
            "properties": {
                "codeSnippetRatingID": {
                    "type": "string"
                },
                "codeSnippetVersionID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.CodeSnippetVersion": {
            "description": "CodeSnippetVersion is the model representing a code snippet version of the code snippet in the system.",
            "type": "object",
            "properties": {
                "codeSnippetID": {
                    "type": "string"
                },
                "codeSnippetRatings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CodeSnippetRating"
                    }
                },
                "codeSnippetVersionID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "programLanguage": {
                    "$ref": "#/definitions/model.ProgramLanguage"
                },
                "programLanguageID": {
                    "type": "string"
                },
                "reviewComments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReviewComment"
                    }
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Notification": {
            "description": "Notification is a model for representing notifications for particular user in the system.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "notificationID": {
                    "type": "string"
                },
                "notificationType": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.ProgramLanguage": {
            "description": "ProgramLanguage is the model representing a programming language in the system.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "programLanguageID": {
                    "type": "string"
                }
            }
        },
        "model.ReviewComment": {
            "description": "ReviewComment is the model representing a comment on a code snippet.",
            "type": "object",
            "properties": {
                "codeSnippetVersion": {
                    "$ref": "#/definitions/model.CodeSnippetVersion"
                },
                "codeSnippetVersionID": {
                    "type": "string"
                },
                "commentID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "isGenerated": {
                    "type": "boolean"
                },
                "line": {
                    "type": "integer"
                },
                "replyComment": {
                    "$ref": "#/definitions/model.ReviewComment"
                },
                "replyCommentID": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "description": "User is the model representing a user in the system.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
